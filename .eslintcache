[{"C:\\Users\\wbmmu\\Desktop\\electron\\react\\pcb-assebmly-checker\\src\\App.js":"1","C:\\Users\\wbmmu\\Desktop\\electron\\react\\pcb-assebmly-checker\\src\\reportWebVitals.js":"2","C:\\Users\\wbmmu\\Desktop\\electron\\react\\pcb-assebmly-checker\\src\\components\\Top.js":"3","C:\\Users\\wbmmu\\Desktop\\electron\\react\\pcb-assebmly-checker\\src\\index.js":"4","C:\\Users\\wbmmu\\Desktop\\electron\\react\\pcb-assebmly-checker\\src\\components\\boards\\alarmpanel\\AlarmPanel.js":"5","C:\\Users\\wbmmu\\Desktop\\electron\\react\\pcb-assebmly-checker\\src\\components\\boards\\controlpanel\\ControlPanel.js":"6","C:\\Users\\wbmmu\\Desktop\\electron\\react\\pcb-assebmly-checker\\src\\components\\boards\\cvboard\\CvBoard.js":"7","C:\\Users\\wbmmu\\Desktop\\electron\\react\\pcb-assebmly-checker\\src\\components\\boards\\midiboard\\MidiBoard.js":"8","C:\\Users\\wbmmu\\Desktop\\electron\\react\\pcb-assebmly-checker\\src\\components\\boards\\gpiboard\\GpiBoard.js":"9","C:\\Users\\wbmmu\\Desktop\\electron\\react\\pcb-assebmly-checker\\src\\components\\boards\\gpoboard\\GpoBoard.js":"10","C:\\Users\\wbmmu\\Desktop\\electron\\react\\pcb-assebmly-checker\\src\\components\\boards\\serialboard\\SerialBoard.js":"11","C:\\Users\\wbmmu\\Desktop\\electron\\react\\pcb-assebmly-checker\\src\\Updates.js":"12"},{"size":832,"mtime":1608859491223,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1606278072237,"results":"15","hashOfConfig":"14"},{"size":4787,"mtime":1608747017372,"results":"16","hashOfConfig":"14"},{"size":639,"mtime":1608141777334,"results":"17","hashOfConfig":"14"},{"size":734,"mtime":1608747267213,"results":"18","hashOfConfig":"14"},{"size":740,"mtime":1608747280159,"results":"19","hashOfConfig":"14"},{"size":725,"mtime":1608747026273,"results":"20","hashOfConfig":"14"},{"size":731,"mtime":1608747204141,"results":"21","hashOfConfig":"14"},{"size":728,"mtime":1608747251458,"results":"22","hashOfConfig":"14"},{"size":728,"mtime":1608747237590,"results":"23","hashOfConfig":"14"},{"size":737,"mtime":1608747224230,"results":"24","hashOfConfig":"14"},{"size":4235,"mtime":1608860306311,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"exise",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"28"},"C:\\Users\\wbmmu\\Desktop\\electron\\react\\pcb-assebmly-checker\\src\\App.js",[],["53","54"],"C:\\Users\\wbmmu\\Desktop\\electron\\react\\pcb-assebmly-checker\\src\\reportWebVitals.js",[],"C:\\Users\\wbmmu\\Desktop\\electron\\react\\pcb-assebmly-checker\\src\\components\\Top.js",[],"C:\\Users\\wbmmu\\Desktop\\electron\\react\\pcb-assebmly-checker\\src\\index.js",[],"C:\\Users\\wbmmu\\Desktop\\electron\\react\\pcb-assebmly-checker\\src\\components\\boards\\alarmpanel\\AlarmPanel.js",[],["55","56"],"C:\\Users\\wbmmu\\Desktop\\electron\\react\\pcb-assebmly-checker\\src\\components\\boards\\controlpanel\\ControlPanel.js",[],"C:\\Users\\wbmmu\\Desktop\\electron\\react\\pcb-assebmly-checker\\src\\components\\boards\\cvboard\\CvBoard.js",[],"C:\\Users\\wbmmu\\Desktop\\electron\\react\\pcb-assebmly-checker\\src\\components\\boards\\midiboard\\MidiBoard.js",[],"C:\\Users\\wbmmu\\Desktop\\electron\\react\\pcb-assebmly-checker\\src\\components\\boards\\gpiboard\\GpiBoard.js",[],"C:\\Users\\wbmmu\\Desktop\\electron\\react\\pcb-assebmly-checker\\src\\components\\boards\\gpoboard\\GpoBoard.js",[],"C:\\Users\\wbmmu\\Desktop\\electron\\react\\pcb-assebmly-checker\\src\\components\\boards\\serialboard\\SerialBoard.js",[],"C:\\Users\\wbmmu\\Desktop\\electron\\react\\pcb-assebmly-checker\\src\\Updates.js",["57"],"import React, { useEffect, useState } from 'react'\r\nconst { ipcRenderer } = window.require('electron')\r\n\r\nexport default function Updates() {\r\n    const [popupContents, setPopupContents] = useState({\r\n        show: false,\r\n        progress: 0,\r\n        contents: []\r\n    })\r\n\r\n    const hidePopup = () => {\r\n        let tempPopupContents = { ...popupContents }\r\n        tempPopupContents.show = false\r\n        setPopupContents(tempPopupContents)\r\n    }\r\n    useEffect(() => {\r\n        ipcRenderer.on('checkingForUpdates', () => {\r\n            console.log('Checking for updates')\r\n        })\r\n\r\n        ipcRenderer.on('updateAvailable', () => {\r\n            console.log('Downloading update')\r\n            let tempPopupContents = { ...popupContents }\r\n            tempPopupContents.show = true\r\n            tempPopupContents.contents = (\r\n                <div>\r\n                    A new version is being downloaded\r\n                    <table style={{ width: '100%' }}>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>\r\n                                    <progress style={{ width: '100%' }} max=\"100\" value={popupContents.progress} />\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <button onClick={() => hidePopup()}>close</button>\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            )\r\n\r\n            setPopupContents(tempPopupContents)\r\n        })\r\n\r\n        ipcRenderer.on('noUpdate', () => {\r\n            console.log('Up to date')\r\n        })\r\n\r\n        ipcRenderer.on('updateDownloaded', (e, releaseInfo) => {\r\n            console.log('Update Downloaded')\r\n            console.log(releaseInfo)\r\n            let tempPopupContents = { ...popupContents }\r\n            tempPopupContents.show = true\r\n            tempPopupContents.contents = (\r\n\r\n                <div>\r\n                    <p>New update downloaded</p>\r\n                    <table>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>\r\n                                    <button onClick={() => setPopupContents()}>Update on exit</button>\r\n                                </td>\r\n                                <td>\r\n                                    <button onClick={() => {\r\n                                        ipcRenderer.send('installUpdate')\r\n                                        hidePopup()\r\n                                    }}>Update and restart app now</button>\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            )\r\n\r\n            setPopupContents(tempPopupContents)\r\n        })\r\n\r\n        ipcRenderer.on('updateError', (error) => {\r\n            console.log('Update Error', error,)\r\n        })\r\n\r\n        ipcRenderer.on('updateDownloadProgress', (e, progressPercent) => {\r\n            console.log('Downloaded')\r\n            console.log(progressPercent)\r\n            let tempPopupContents = { ...popupContents }\r\n            tempPopupContents.progress = progressPercent\r\n            setPopupContents(tempPopupContents)\r\n        })\r\n\r\n        return () => {\r\n            ipcRenderer.removeAllListeners('checkingForUpdates')\r\n            ipcRenderer.removeAllListeners('updateAvailable')\r\n            ipcRenderer.removeAllListeners('noUpdate')\r\n            ipcRenderer.removeAllListeners('updateError')\r\n            ipcRenderer.removeAllListeners('updateDownloaded')\r\n        }\r\n    }, [])\r\n\r\n    const makePopup = () => {\r\n        if (popupContents.show === true) {\r\n            return (\r\n                <div style={{ position: 'fixed', bottom: '10px', right: '10px', padding: '10px', boxShadow: '3px 3px 3px', fontSize: '12px', border: '1px solid black' }}>\r\n                    {popupContents.contents}\r\n                </div>\r\n            )\r\n        } else {\r\n            return <div></div>\r\n        }\r\n    }\r\n\r\n    return (\r\n        makePopup()\r\n    )\r\n}\r\n",{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"58","replacedBy":"62"},{"ruleId":"60","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":101,"column":8,"nodeType":"66","endLine":101,"endColumn":10,"suggestions":"67"},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],["68"],["69"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'hidePopup' and 'popupContents'. Either include them or remove the dependency array.","ArrayExpression",["70"],"no-global-assign","no-unsafe-negation",{"desc":"71","fix":"72"},"Update the dependencies array to be: [hidePopup, popupContents]",{"range":"73","text":"74"},[3759,3761],"[hidePopup, popupContents]"]