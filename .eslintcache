[{"C:\\Users\\wbmmu\\Desktop\\electron\\react\\pcb-assebmly-checker\\src\\App.js":"1","C:\\Users\\wbmmu\\Desktop\\electron\\react\\pcb-assebmly-checker\\src\\reportWebVitals.js":"2","C:\\Users\\wbmmu\\Desktop\\electron\\react\\pcb-assebmly-checker\\src\\components\\Top.js":"3","C:\\Users\\wbmmu\\Desktop\\electron\\react\\pcb-assebmly-checker\\src\\index.js":"4","C:\\Users\\wbmmu\\Desktop\\electron\\react\\pcb-assebmly-checker\\src\\components\\boards\\CvBoard.js":"5","C:\\Users\\wbmmu\\Desktop\\electron\\react\\pcb-assebmly-checker\\src\\components\\boards\\ControlPanel.js":"6","C:\\Users\\wbmmu\\Desktop\\electron\\react\\pcb-assebmly-checker\\src\\components\\boards\\GpiBoard.js":"7","C:\\Users\\wbmmu\\Desktop\\electron\\react\\pcb-assebmly-checker\\src\\components\\boards\\GpoBoard.js":"8","C:\\Users\\wbmmu\\Desktop\\electron\\react\\pcb-assebmly-checker\\src\\components\\boards\\SerialBoard.js":"9","C:\\Users\\wbmmu\\Desktop\\electron\\react\\pcb-assebmly-checker\\src\\components\\boards\\MidiBoard.js":"10","C:\\Users\\wbmmu\\Desktop\\electron\\react\\pcb-assebmly-checker\\src\\components\\boards\\alarmpanel\\AlarmPanel.js":"11"},{"size":967,"mtime":1608597889566,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1606278072237,"results":"14","hashOfConfig":"13"},{"size":4085,"mtime":1608653750998,"results":"15","hashOfConfig":"13"},{"size":639,"mtime":1608141777334,"results":"16","hashOfConfig":"13"},{"size":336149,"mtime":1608525581049,"results":"17","hashOfConfig":"13"},{"size":725259,"mtime":1608524916122,"results":"18","hashOfConfig":"13"},{"size":389186,"mtime":1608525911756,"results":"19","hashOfConfig":"13"},{"size":417739,"mtime":1608526217096,"results":"20","hashOfConfig":"13"},{"size":516137,"mtime":1608526758379,"results":"21","hashOfConfig":"13"},{"size":457803,"mtime":1608526479602,"results":"22","hashOfConfig":"13"},{"size":395553,"mtime":1608525136091,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},"12fbx41",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"27"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"C:\\Users\\wbmmu\\Desktop\\electron\\react\\pcb-assebmly-checker\\src\\App.js",["49"],"import { useEffect, useState } from 'react';\nimport Top from './components/Top'\n\nconst { ipcRenderer } = window.require('electron')\n\nfunction App() {\n  const [state, setState] = useState([])\n\n\n  useEffect(() => {\n    ipcRenderer.on('message', (e, theMessage) => {\n      console.log(theMessage)\n      setState(theMessage, ...state)\n    })\n\n    ipcRenderer.on('app_version', (event, arg) => {\n      document.title = 'WBM Tek PCB Assembly Checker --- v' + arg.version;\n    });\n\n\n    ipcRenderer.send('reactIsReady')\n\n    return () => {\n      ipcRenderer.removeAllListeners('message')\n      ipcRenderer.removeAllListeners('app_version')\n    }\n  }, [])\n\n\n  return (\n    <div style={{ display: 'flex', flexDirection: 'column', width: '100vw', height: '100vh', minWidth: '100vw', minHeight: '100vh', overflow: 'hidden' }}>\n      <Top msgs={''} />\n      <div style={{ height: '100%', overflowY: 'auto' }}>\n        {state}\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n",["50","51"],"C:\\Users\\wbmmu\\Desktop\\electron\\react\\pcb-assebmly-checker\\src\\reportWebVitals.js",[],"C:\\Users\\wbmmu\\Desktop\\electron\\react\\pcb-assebmly-checker\\src\\components\\Top.js",["52","53","54","55","56","57","58","59","60"],"import React, { Fragment, useState } from 'react'\r\nimport { Route, Switch, useHistory } from 'react-router-dom'\r\nimport ControlPanel from './boards/ControlPanel'\r\nimport AlarmPanel from './boards/alarmpanel/AlarmPanel'\r\nimport CvBoard from './boards/CvBoard'\r\nimport GpiBoard from './boards/GpiBoard'\r\nimport GpoBoard from './boards/GpoBoard'\r\nimport MidiBoard from './boards/MidiBoard'\r\nimport SerialBoard from './boards/SerialBoard'\r\nimport { Button } from 'react-bootstrap'\r\nconst { ipcRenderer } = window.require('electron')\r\n\r\nexport default function Top(props) {\r\n    const [buttonDisable, setButtonDisable] = useState(true)\r\n    const history = useHistory()\r\n\r\n    const boards = [\r\n        \"---\",\r\n        \"Control Panel\",\r\n        \"Alarm Panel\",\r\n        \"CV Board\",\r\n        \"GPI Board\",\r\n        \"GPO Board\",\r\n        \"MIDI Board\",\r\n        \"Serial Board\"\r\n    ]\r\n\r\n    const setBoard = (board) => {\r\n        switch (board) {\r\n            case 'Control Panel':\r\n                setButtonDisable(false)\r\n                history.replace('/controlpanel')\r\n                break;\r\n\r\n            case 'Alarm Panel':\r\n                setButtonDisable(false)\r\n                history.replace('/alarmpanel')\r\n                break;\r\n\r\n            case 'CV Board':\r\n                setButtonDisable(false)\r\n                history.replace('/cvboard')\r\n                break;\r\n\r\n            case 'GPI Board':\r\n                setButtonDisable(false)\r\n                history.replace('/gpiboard')\r\n                break;\r\n\r\n            case 'GPO Board':\r\n                setButtonDisable(false)\r\n                history.replace('/gpoboard')\r\n                break;\r\n\r\n            case 'MIDI Board':\r\n                setButtonDisable(false)\r\n                history.replace('/midiboard')\r\n                break;\r\n\r\n            case 'Serial Board':\r\n                setButtonDisable(false)\r\n                history.replace('/serialboard')\r\n                break;\r\n\r\n            default:\r\n                setButtonDisable(true)\r\n                history.replace('/')\r\n                break;\r\n        }\r\n    }\r\n\r\n    const program = () => {\r\n        console.log('Program')\r\n    }\r\n\r\n    const chipErase = () => {\r\n        console.log('Chip Erase')\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <div style={{ padding: '10px', borderBottom: '1px solid lightGrey', width: '100%' }}>\r\n                <table>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td><b>Board:</b></td>\r\n                            <td>\r\n                                <select onChange={(e) => setBoard(e.target.value)}>\r\n                                    {boards.map((brd, idx) => <option key={'brdOption' + idx}>{brd}</option>)}\r\n                                </select>\r\n                            </td>\r\n                            <td style={buttonStyle} onClick={program} ><Button size=\"sm\" variant=\"outline-primary\" disabled={buttonDisable} >Program</Button></td>\r\n                            <td style={buttonStyle} onClick={chipErase} ><Button size=\"sm\" variant=\"outline-danger\" disabled={buttonDisable} >Chip Erase</Button></td>\r\n                            <td style={buttonStyle} onClick={() => ipcRenderer.send('loadFirmware', 'blinkSlow.bin')} ><Button size=\"sm\" variant=\"outline-success\">Slow</Button></td>\r\n                            <td style={buttonStyle} onClick={() => ipcRenderer.send('loadFirmware', 'blinkFast.bin')} ><Button size=\"sm\" variant=\"outline-success\">Fast</Button></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td colSpan=\"3\" style={{ fontSize: '12px' }} >The File Name</td>\r\n                            <td style={{ fontSize: '12px' }} >{props.msgs}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <div style={{ padding: '10px', maxHeight: '100%', overflow: 'hidden' }}>\r\n                SWITCH\r\n            </div>\r\n        </Fragment >\r\n    )\r\n}\r\n\r\nconst buttonStyle = {\r\n    paddingLeft: '10px'\r\n}","C:\\Users\\wbmmu\\Desktop\\electron\\react\\pcb-assebmly-checker\\src\\index.js",[],"C:\\Users\\wbmmu\\Desktop\\electron\\react\\pcb-assebmly-checker\\src\\components\\boards\\CvBoard.js",[],"C:\\Users\\wbmmu\\Desktop\\electron\\react\\pcb-assebmly-checker\\src\\components\\boards\\ControlPanel.js",[],"C:\\Users\\wbmmu\\Desktop\\electron\\react\\pcb-assebmly-checker\\src\\components\\boards\\GpiBoard.js",[],"C:\\Users\\wbmmu\\Desktop\\electron\\react\\pcb-assebmly-checker\\src\\components\\boards\\GpoBoard.js",[],"C:\\Users\\wbmmu\\Desktop\\electron\\react\\pcb-assebmly-checker\\src\\components\\boards\\SerialBoard.js",[],"C:\\Users\\wbmmu\\Desktop\\electron\\react\\pcb-assebmly-checker\\src\\components\\boards\\MidiBoard.js",[],"C:\\Users\\wbmmu\\Desktop\\electron\\react\\pcb-assebmly-checker\\src\\components\\boards\\alarmpanel\\AlarmPanel.js",[],{"ruleId":"61","severity":1,"message":"62","line":27,"column":6,"nodeType":"63","endLine":27,"endColumn":8,"suggestions":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":2,"column":10,"nodeType":"71","messageId":"72","endLine":2,"endColumn":15},{"ruleId":"69","severity":1,"message":"73","line":2,"column":17,"nodeType":"71","messageId":"72","endLine":2,"endColumn":23},{"ruleId":"69","severity":1,"message":"74","line":3,"column":8,"nodeType":"71","messageId":"72","endLine":3,"endColumn":20},{"ruleId":"69","severity":1,"message":"75","line":4,"column":8,"nodeType":"71","messageId":"72","endLine":4,"endColumn":18},{"ruleId":"69","severity":1,"message":"76","line":5,"column":8,"nodeType":"71","messageId":"72","endLine":5,"endColumn":15},{"ruleId":"69","severity":1,"message":"77","line":6,"column":8,"nodeType":"71","messageId":"72","endLine":6,"endColumn":16},{"ruleId":"69","severity":1,"message":"78","line":7,"column":8,"nodeType":"71","messageId":"72","endLine":7,"endColumn":16},{"ruleId":"69","severity":1,"message":"79","line":8,"column":8,"nodeType":"71","messageId":"72","endLine":8,"endColumn":17},{"ruleId":"69","severity":1,"message":"80","line":9,"column":8,"nodeType":"71","messageId":"72","endLine":9,"endColumn":19},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'state'. Either include it or remove the dependency array. You can also do a functional update 'setState(s => ...)' if you only need 'state' in the 'setState' call.","ArrayExpression",["81"],"no-native-reassign",["82"],"no-negated-in-lhs",["83"],"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'ControlPanel' is defined but never used.","'AlarmPanel' is defined but never used.","'CvBoard' is defined but never used.","'GpiBoard' is defined but never used.","'GpoBoard' is defined but never used.","'MidiBoard' is defined but never used.","'SerialBoard' is defined but never used.",{"desc":"84","fix":"85"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [state]",{"range":"86","text":"87"},[644,646],"[state]"]